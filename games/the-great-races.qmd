---
airtable_id: rec3my94BfA3HJ3ok
board_links: https://drive.google.com/file/d/1hBBNV3KRXOaAZMiubyK8PWPCLR-mX1Z5/view?usp=drive_link
complexity: ‚òÖ
external_links: ''
filename: the-great-races
format:
  html:
    css: ../styles.css
    page-layout: full
game_format: Game Board
manual_links: https://drive.google.com/file/d/1Uq2r1TlepSXszlsNb42wyqcVD6qvDIBp/view?usp=drive_link
players: 2-6
summary: Roll, pair, and race ‚Äî climb to the top across 11 thrilling tracks. A fast-paced
  game of smart choices, lucky rolls, and point-packed finishes.
time: '30'
title: The Great Races
type: Mathematics/Probability
video_docs: ''
---

# The Great Races

:::{.game-info-box}
:::{.game-stats}
Player Count: 2-6  
Time: 30
Format: Game Board  
Complexity: ‚òÖ
:::
:::

:::{.game-summary}
##### Roll, pair, and race ‚Äî climb to the top across 11 thrilling tracks. A fast-paced game of smart choices, lucky rolls, and point-packed finishes.
:::

:::{.game-actions}
<a href="#" class="btn btn-play disabled-button"><i class="fa fa-gamepad"></i> Play the game</a>
<a href="#" class="btn btn-watch disabled-button"><i class="fa fa-video"></i> Watch a video</a>
<a href="https://drive.google.com/file/d/1Uq2r1TlepSXszlsNb42wyqcVD6qvDIBp/view?usp=drive_link" class="btn btn-manual"><i class="fa fa-book"></i> Read the manual</a>
<a href="https://drive.google.com/file/d/1hBBNV3KRXOaAZMiubyK8PWPCLR-mX1Z5/view?usp=drive_link" class="btn btn-board"><i class="fa fa-file-pdf"></i> Board PDF</a>
:::

```{=html}
<div class="reaction-container">
	<div class="emoji" data-reaction="emoji5">‚òπÔ∏è</div>
	<div class="emoji" data-reaction="emoji4">üôÅ</div>
	<div class="emoji" data-reaction="emoji3">üòê</div>
	<div class="emoji" data-reaction="emoji2">üôÇ</div>
	<div class="emoji" data-reaction="emoji1">üòÅ</div>
</div>

<style>
	.reaction-container {
		display: flex;
		justify-content: center;
		gap: 14px;
		padding: 16px;
		margin-top: 60px;
		border-radius: 12px;
		max-width: 480px;
		margin-left: auto;
		margin-right: auto;
	}

	.emoji {
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 8px;
		border-radius: 999px;
		background-color: #fff;
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
		transition: transform 0.2s ease, background-color 0.2s ease;
		font-size: 1.5rem;
		width: 50px;
		height: 50px;
	}

	.emoji:hover {
		background-color: #f0f0f0;
		transform: scale(1.1);
	}

	.emoji.clicked {
		animation: pop 0.3s ease;
	}

	.emoji.active-reaction {
		background-color: #d0f0ff;
		box-shadow: 0 0 0 2px #00aaff;
	}

	@keyframes pop {
		0% {
			transform: scale(1);
		}
		50% {
			transform: scale(1.3);
		}
		100% {
			transform: scale(1);
		}
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const emojis = document.querySelectorAll(".emoji");
		const gameId = window.location.pathname;
		const cookieKey = `reaction-${gameId}`;

		// Cookie helpers
		function setCookie(name, value, days) {
			const d = new Date();
			d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);
			document.cookie = `${name}=${value};expires=${d.toUTCString()};path=/`;
		}

		function getCookie(name) {
			const cookies = document.cookie.split("; ");
			for (const cookie of cookies) {
				const [key, value] = cookie.split("=");
				if (key === name) return value;
			}
			return null;
		}

		function deleteCookie(name) {
			document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;
		}

		// Load and apply stored reaction
		const storedReaction = getCookie(cookieKey);
		emojis.forEach((emoji) => {
			if (emoji.dataset.reaction === storedReaction) {
				emoji.classList.add("active-reaction");
			}
		});

		emojis.forEach((emoji) => {
			emoji.addEventListener("click", () => {
				const clickedReaction = emoji.dataset.reaction;
				const currentReaction = getCookie(cookieKey);

				if (clickedReaction === currentReaction) {
					// Unselect
					deleteCookie(cookieKey);
					emoji.classList.remove("active-reaction");
				} else {
					// Switch reaction
					emojis.forEach((e) =>
						e.classList.remove("active-reaction")
					);
					emoji.classList.add("active-reaction");
					setCookie(cookieKey, clickedReaction, 365);
				}

				// Animate
				emoji.classList.add("clicked");
				setTimeout(() => emoji.classList.remove("clicked"), 400);

				// TODO: Send clickedReaction + gameId to backend
				// fetch("https://your-backend.com/reactions", {
				// 	method: "POST",
				//	headers: { "Content-Type": "application/json" },
				//	body: JSON.stringify({ gameId, reaction: clickedReaction })
				// });
			});
		});
	});
</script>

<script>
	document.addEventListener("DOMContentLoaded", function () {
		const typeMap = {
			"Strategy": "#fcfacc",
			"Mathematics/Probability": "#e5f2c6",
			"Language/Social": "#dff6fa",
			"Science/Deduction": "#fcdcc7",
		};

		// This value is inserted at render time by Quarto from frontmatter
		const type = "{{< meta type >}}";

		const color = typeMap[type];
		if (color) {
			document.body.style.backgroundColor = color;
		}
	});
</script>
```

