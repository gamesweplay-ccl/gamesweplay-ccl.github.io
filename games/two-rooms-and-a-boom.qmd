---
airtable_id: recHdajo3i7AEcW96
board_links: https://drive.google.com/file/d/1RoDYLzDl9Siz4baQ3tVxXnd_7mDUBpq_/view?usp=sharing
complexity: ‚òÖ‚òÖ‚òÖ
external_links: ''
filename: two-rooms-and-a-boom
format:
  html:
    css: ../styles.css
    page-layout: full
game_format: Custom
manual_links: https://drive.google.com/file/d/1yW1a6gF713iOJ6q4_mBLAWTxQm0xPbuv/view?usp=drive_link
players: 10-30
rules_video: ''
summary: Can you protect the President ‚Äî or place the Bomber by their side? A fast-paced
  game of hidden roles, shifting rooms, and explosive outcomes.
time: '10'
title: Two Rooms and a Boom
type: Language/Social
walkthrough_video: ''
---

# Two Rooms and a Boom

:::{.game-info-box}
:::{.game-stats}
```{=html}
<span class="tooltip-gamestats" data-tooltip="10 minutes"><i class="fas fa-clock"></i></span>
<span class="tooltip-gamestats" data-tooltip="10-30 players"><i class="fas fa-users"></i></span>
<span class="tooltip-gamestats" data-tooltip="Custom required"><i class="fas fa-clone"></i></span>
<span class="tooltip-gamestats" data-tooltip="‚òÖ‚òÖ‚òÖ"><i class="fas fa-star"></i></span>
```
:::
:::

:::{.game-summary}
##### Can you protect the President ‚Äî or place the Bomber by their side? A fast-paced game of hidden roles, shifting rooms, and explosive outcomes.
:::

:::{.game-actions}
```{=html}
<a href="#" class="btn btn-play disabled-button"><i class="fa fa-gamepad"></i> Play the game</a>
<a href="#" class="btn btn-watch disabled-button"><i class="fa fa-video"></i> Rules video</a>
<a href="#" class="btn btn-watch disabled-button"><i class="fa fa-video"></i> Watch us play</a>
<a href="https://drive.google.com/file/d/1yW1a6gF713iOJ6q4_mBLAWTxQm0xPbuv/view?usp=drive_link" class="btn btn-manual"><i class="fa fa-book"></i> Read the manual</a>
<a href="https://drive.google.com/file/d/1RoDYLzDl9Siz4baQ3tVxXnd_7mDUBpq_/view?usp=sharing" class="btn btn-board"><i class="fa fa-file-pdf"></i> Printable PDF</a>
```
:::

```{=html}
<div class="reaction-container">
	<div class="emoji" data-reaction="emoji-loved" data-tooltip="Loved it!">
		üòç
	</div>
	<div class="emoji" data-reaction="emoji-enjoyed" data-tooltip="Enjoyed it">
		üòÅ
	</div>
	<div
		class="emoji"
		data-reaction="emoji-mindblow"
		data-tooltip="Mind Blown!"
	>
		ü§Ø
	</div>
	<div class="emoji" data-reaction="emoji-meh" data-tooltip="Meh">üòê</div>
	<div class="emoji" data-reaction="emoji-confused" data-tooltip="Confused">
		ü´§
	</div>
	<div
		class="emoji"
		data-reaction="emoji-notenjoyed"
		data-tooltip="Did not enjoy"
	>
		‚òπÔ∏è
	</div>
	<div
		class="emoji"
		data-reaction="emoji-frustrated"
		data-tooltip="Got frustrated"
	>
		üò§
	</div>
</div>

<style>
	.reaction-container {
		display: flex;
		justify-content: center;
		gap: 14px;
		padding: 16px;
		margin-top: 60px;
		border-radius: 12px;
		max-width: 480px;
		margin-left: auto;
		margin-right: auto;
	}

	.emoji {
		cursor: pointer;
		display: flex;
		align-items: center;
		justify-content: center;
		padding: 8px;
		border-radius: 999px;
		background-color: #fff;
		box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
		transition: transform 0.2s ease, background-color 0.2s ease;
		font-size: 1.5rem;
		width: 50px;
		height: 50px;
		position: relative;
	}

	.emoji::after {
		content: attr(data-tooltip);
		position: absolute;
		bottom: 110%;
		left: 50%;
		transform: translateX(-50%);
		background: #333;
		color: #fff;
		padding: 4px 8px;
		border-radius: 4px;
		font-size: 0.75rem;
		white-space: nowrap;
		opacity: 0;
		pointer-events: none;
		transition: opacity 0.2s ease;
		z-index: 10;
	}

	.emoji:hover::after {
		opacity: 1;
	}

	.emoji:hover {
		background-color: #f0f0f0;
		transform: scale(1.1);
	}

	.emoji.clicked {
		animation: pop 0.3s ease;
	}

	.emoji.active-reaction {
		background-color: #d0f0ff;
		box-shadow: 0 0 0 2px #00aaff;
	}

	@keyframes pop {
		0% {
			transform: scale(1);
		}
		50% {
			transform: scale(1.3);
		}
		100% {
			transform: scale(1);
		}
	}

	/* Action buttons */
	.game-actions {
		display: flex;
		justify-content: flex-start;
		margin: 2.5rem 0;
		gap: 1.5rem;
		align-items: center;
		width: 100%;
	}

	.btn {
		padding: 1rem 1.5rem;
		border-radius: 20px;
		text-decoration: none;
		font-weight: 400;
		transition: all 0.3s ease;
		display: inline-block;
		text-align: center;
		min-width: 200px;
		font-family: "Lato", sans-serif;
		font-size: 1.1rem;
		cursor: pointer;
	}

	/* Play game button */
	.btn-play {
		background-color: #d0ebd0;
		color: #333;
		border: none;
	}
	.btn-play:hover {
		background-color: #a8d5a8;
		text-decoration: none;
	}

	/* Watch video button */
	.btn-watch {
		background-color: #d6e0ec;
		color: #333;
		border: none;
	}
	.btn-watch:hover {
		background-color: #b8c5d6;
		text-decoration: none;
	}

	/* Manual button */
	.btn-manual {
		background-color: #ebc5d0;
		color: #333;
		border: none;
	}
	.btn-manual:hover {
		background-color: #d6a8b8;
		text-decoration: none;
	}

	/* Board PDF button */
	.btn-board {
		background-color: #f1e1a0;
		color: #333;
		border: none;
	}
	.btn-board:hover {
		background-color: #e0c88a;
		text-decoration: none;
	}

	/* Hide empty buttons */
	.game-actions:empty {
		display: none;
	}

	.disabled-button {
		pointer-events: none; /* Prevent clicks */
		opacity: 0.5; /* Make it look disabled */
		background-color: #ccc; /* Grey background */
		color: #666; /* Darker text */
	}

	p {
		margin: 2rem 0;
		font-size: 1.1rem;
		line-height: 1.6;
		color: #666;
		font-family: "Droid Sans", sans-serif;
	}
</style>

<script>
	document.addEventListener("DOMContentLoaded", () => {
		const emojis = document.querySelectorAll(".emoji");
		const gameId = window.location.pathname;
		const cookieKey = `reaction-${gameId}`;

		// Cookie helpers
		function setCookie(name, value, days) {
			const d = new Date();
			d.setTime(d.getTime() + days * 24 * 60 * 60 * 1000);
			document.cookie = `${name}=${value};expires=${d.toUTCString()};path=/`;
		}

		function getCookie(name) {
			const cookies = document.cookie.split("; ");
			for (const cookie of cookies) {
				const [key, value] = cookie.split("=");
				if (key === name) return value;
			}
			return null;
		}

		function deleteCookie(name) {
			document.cookie = `${name}=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;`;
		}

		function getReactions() {
			const cookieValue = getCookie(cookieKey);
			if (!cookieValue) return [];
			return cookieValue.split(",");
		}

		function saveReactions(reactions) {
			if (reactions.length === 0) {
				deleteCookie(cookieKey);
			} else {
				setCookie(cookieKey, reactions.join(","), 365);
			}
		}

		// Load stored reactions
		let selectedReactions = getReactions();
		selectedReactions.forEach((reaction) => {
			const emoji = document.querySelector(
				`.emoji[data-reaction="${reaction}"]`
			);
			if (emoji) {
				emoji.classList.add("active-reaction");
			}
		});

		emojis.forEach((emoji) => {
			emoji.addEventListener("click", () => {
				const clickedReaction = emoji.dataset.reaction;
				const index = selectedReactions.indexOf(clickedReaction);

				if (index > -1) {
					// Deselect
					selectedReactions.splice(index, 1);
					emoji.classList.remove("active-reaction");
				} else {
					// Select
					selectedReactions.push(clickedReaction);
					emoji.classList.add("active-reaction");
				}

				saveReactions(selectedReactions);

				// Animate
				emoji.classList.add("clicked");
				setTimeout(() => emoji.classList.remove("clicked"), 400);

				// TODO: Send clickedReaction + gameId to backend
				// fetch("https://your-backend.com/reactions", {
				// 	method: "POST",
				// 	headers: { "Content-Type": "application/json" },
				// 	body: JSON.stringify({ gameId, reaction: clickedReaction, selected: index === -1 })
				// });
			});
		});
	});
</script>

<script>
	document.addEventListener("DOMContentLoaded", function () {
		const typeMap = {
			"Strategy": "#fffcd4",
			"Mathematics/Probability": "#ffecdb",
			"Language/Social": "#dcf3fa",
			"Science/Deduction": "#e4f6dd",
		};

		// This value is inserted at render time by Quarto from frontmatter
		const type = "{{< meta type >}}";

		const color = typeMap[type];
		if (color) {
			document.body.style.backgroundColor = color;
		}
	});
</script>
```

